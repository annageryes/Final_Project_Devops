---

- name: Wait for Jenkins to be available
  ansible.builtin.uri:
    url: "{{ jenkins_url }}"
    status_code: 403
    timeout: 60
  register: jenkins_status
  until: jenkins_status is success
  retries: 5
  delay: 10

- name: read the password from docker logs to unlock
  shell: cat jenkins_sandbox_home/secrets/initialAdminPassword
  register: adminpwd


- name: unlock and add provided user
  jenkins_script:
    script: |
      import jenkins.model.*
      import hudson.security.*
      def instance = Jenkins.getInstance()
      def hudsonRealm = new HudsonPrivateSecurityRealm(false)
      hudsonRealm.createAccount( {{ jenkins_user }},{{ jenkins_password }})
      instance.setSecurityRealm(hudsonRealm)
      def strategy = new FullControlOnceLoggedInAuthorizationStrategy()
      strategy.setAllowAnonymousRead(false)
      instance.setAuthorizationStrategy(strategy)
      instance.save()
    user: "{{ jenkins_user }}"
    password: "{{ adminpwd.stdout }}"
  ignore_errors: yes 


- name: complete setup wizard
  jenkins_script:
    script: |
      import static jenkins.model.Jenkins.instance as jenkins
      import jenkins.install.InstallState
      if (!jenkins.installState.isSetupComplete()) {
        InstallState.INITIAL_SETUP_COMPLETED.initializeState()
      }
    user: "{{ jenkins_user }}"
    password: "{{ jenkins_password }}"
  ignore_errors: yes 


- name: install recomended plugin
  community.general.jenkins_plugin:
    name: "{{ item }}"
    url: "{{ jenkins_url}}"
    url_username: "{{ jenkins_user }}"
    url_password: "{{ jenkins_password }}"
  with_items:
    - "pipeline"
    - "docker-plugin"
    - "ansible"
    - "docker-workflow"
    - "job-dsl"
    - "rebuild"
    - "configuration-as-code"
    - "pipeline-utility-steps"
    - "role-strategy"
    - "thinBackup"
    - "backup"
    - "ssh"
    
  ignore_errors: yes 